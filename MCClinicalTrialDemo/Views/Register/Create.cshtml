@model MCClinicalTrialDemo.Models.TrialViewModel

@{
    ViewBag.Title = "Register Trial for Publishing Study Data";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Create", "Register", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>TrialViewModel</h4>*@
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.TrialName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.TrialName, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.TrialName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrialDescription, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.TrialDescription, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TrialDescription)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfCommencement, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DateOfCommencement, new { @class = "form-control", placeholder = "Date Of Commencement", @readonly = "true", @autocomplete=false} )
                
                @*@Html.TextBoxFor(model => model.DateOfCommencement, "{0:d MMM yyyy}", new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.DateOfCommencement)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProtocolName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ProtocolName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProtocolName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudyNumber, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.StudyNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudyNumber)
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Location, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Location)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comments, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Comments)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudyFacts, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.StudyFacts, new { type = "file" })
                @Html.ValidationMessageFor(model => model.StudyFacts)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
        
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
        
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")


    <script type="text/javascript">

        $(document).ready(function () {
            $('#DateOfCommencement').datepicker({
                dateFormat: "mm/dd/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0",
                showOn: "button"
            }).css("display", "inline-block")
            .next("button").button({
                icons: { primary: "ui-icon-calendar"},
                label: "...",
                text: false
            });
            //$("#DateOfCommencement").datepicker();
        });
    </script>

}
